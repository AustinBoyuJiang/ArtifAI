"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadFull = void 0;
const tsparticles_plugin_absorbers_1 = require("tsparticles-plugin-absorbers");
const tsparticles_updater_destroy_1 = require("tsparticles-updater-destroy");
const tsparticles_plugin_emitters_1 = require("tsparticles-plugin-emitters");
const tsparticles_interaction_external_trail_1 = require("tsparticles-interaction-external-trail");
const tsparticles_updater_roll_1 = require("tsparticles-updater-roll");
const tsparticles_slim_1 = require("tsparticles-slim");
const tsparticles_updater_tilt_1 = require("tsparticles-updater-tilt");
const tsparticles_updater_twinkle_1 = require("tsparticles-updater-twinkle");
const tsparticles_updater_wobble_1 = require("tsparticles-updater-wobble");
function loadFull(engine) {
    return __awaiter(this, void 0, void 0, function* () {
        yield (0, tsparticles_slim_1.loadSlim)(engine);
        yield (0, tsparticles_updater_destroy_1.loadDestroyUpdater)(engine);
        yield (0, tsparticles_updater_roll_1.loadRollUpdater)(engine);
        yield (0, tsparticles_updater_tilt_1.loadTiltUpdater)(engine);
        yield (0, tsparticles_updater_twinkle_1.loadTwinkleUpdater)(engine);
        yield (0, tsparticles_updater_wobble_1.loadWobbleUpdater)(engine);
        yield (0, tsparticles_interaction_external_trail_1.loadExternalTrailInteraction)(engine);
        yield (0, tsparticles_plugin_absorbers_1.loadAbsorbersPlugin)(engine);
        yield (0, tsparticles_plugin_emitters_1.loadEmittersPlugin)(engine);
    });
}
exports.loadFull = loadFull;
